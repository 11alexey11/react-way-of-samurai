{"version":3,"sources":["components/Navbar/Navbar.module.css","assets/images/user.png","assets/images/preloader.svg","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/FormsControls/FormsControls.module.css","components/Users/users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","nav","item","activeLink","__webpack_require__","p","dialogs","dialogsItems","active","messages","message","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","API-KEY","usersAPI","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","userId","post","delete","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","initialState","posts","id","likesCount","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","Object","objectSpread","toConsumableArray","name","dialogsReducer","body","newMessageBody","sidebarReducer","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingProgress","usersReducer","map","u","followed","count","filter","email","login","isAuth","authReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","Navbar","react_default","a","createElement","className","s","NavLink","to","activeClassName","DialogItem","props","path","dialog","Message","FormControl","_ref","input","meta","child","objectWithoutProperties","hasError","touched","error","styles","formControl","children","Textarea","restProps","FormsControls_FormControl","assign","Input","required","value","maxLengthCreator","maxLength","maxLength50","reduxForm","onSubmit","handleSubmit","Field","component","validate","placeholder","Dialogs","dialogsElements","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","Redirect","mapStateToPropsForRedirect","withAuthRedirect","Component","RedirectComponent","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","React","connect","compose","dispatch","sendMessageCreator","Users","pagesCount","Math","ceil","pages","i","push","selectedPage","onClick","e","onPageChanged","src","photos","small","userPhoto","disabled","some","unfollow","follow","Preloader","style","backgroundColor","preloader","UsersContainer","pageNumber","_this","getUsers","Fragment","common_Preloader_Preloader","components_Users_Users","resultCode","followSuccess","unfollowSuccess","setCurrentPage","items","totalCount","ProfileStatus","editMode","activateEditMode","setState","onStatusChange","currentTarget","prevProps","prevState","log","onDoubleClick","onChange","autoFocus","onBlur","deactivateEditMode","bind","ProfileInfo","descriptionBlock","large","ProfileInfo_ProfileStatus","Post","maxLength10","AddNewPostFormRedux","MyPosts","postsElements","MyPosts_Post_Post","createRef","postsBlock","addPost","MyPostsContainer","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","params","getUserProfile","components_Profile_Profile","withRouter","Header","header","loginBlock","HeaderContainer","getAuthUserData","components_Header_Header","_response$data$data","setAuthUserData","LoginReduxForm","Login","formData","App","Header_HeaderContainer","components_Navbar_Navbar","Route","render","DialogsContainer","Profile_ProfileContainer","Users_UsersContainer","components_Login_Login","ReactDOM","BrowserRouter","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2562d732.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2S1pW\",\"item\":\"Navbar_item__25Egq\",\"activeLink\":\"Navbar_activeLink__2Syz9\"};","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.6c3daf60.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2ylxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1O8Ev\",\"dialogsItems\":\"Dialogs_dialogsItems__1Vj-L\",\"active\":\"Dialogs_active__3G2U2\",\"messages\":\"Dialogs_messages__2XqqR\",\"message\":\"Dialogs_message__3N3oA\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"b1775b2f-c3a5-4509-8dc9-90b5629de7c3\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    }\r\n}\r\n\r\n\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    });\r\n}\r\n\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n}\r\n\r\nexport const updateStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        });\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login) => ({type: SET_USER_DATA, data: {userId, email, login}  })\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, login, email} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login));\r\n            }\r\n        });\r\n}\r\n\r\nexport default authReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\n\nconst FormControl = ({input, meta, child, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {props.children}\n            </div>\n            { hasError && <span>{meta.error}</span> }\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       placeholder='Enter your message' name=\"newMessageBody\" />\r\n            </div>\r\n            <div>\r\n                <button>Send222</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from 'react';\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\nimport * as axios from \"axios\";\nimport {toggleFollowingProgress} from \"../../redux/users-reducer\";\nimport {usersAPI} from \"../../api/api\";\n\nlet Users = (props) => {\n\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n\n    return <div>\n        <div>\n            {pages.map(p => {\n                return <span className={props.currentPage === p && styles.selectedPage}\n                             onClick={(e) => {\n                                 props.onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        </div>\n        {\n            props.users.map(u => <div key={u.id}>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + u.id}>\n                        <img src={u.photos.small != null ? u.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {u.followed\n                            ? <button disabled={props.followingInProgress\n                                .some(id => id === u.id)}\n                                      onClick={() => { props.unfollow(u.id) }}>\n                                Unfollow</button>\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)}\n                                      onClick={() => { props.follow(u.id) }}>\n                                      Follow</button>}\n\n                    </div>\n                </span>\n                <span>\n                    <span>\n                        <div>{u.name}</div>\n                        <div>{u.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"u.location.country\"}</div>\n                        <div>{\"u.location.city\"}</div>\n                    </span>\n                </span>\n            </div>)\n        }\n    </div>\n}\n\nexport default Users;","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, getUsers\r\n} from '../../redux/users-reducer';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        followingInProgress={this.props.followingInProgress}\r\n             />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,{follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers })\r\n)(UsersContainer)","import React from 'react';\nimport s from './ProfileInfo.module.css';\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n        this.setState( {\n            editMode: true\n        } );\n    }\n    deactivateEditMode() {\n        this.setState( {\n            editMode: false\n        } );\n        this.props.updateStatus(this.state.status);\n    }\n\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            });\n        }\n\n        console.log(\"componentDidUpdate\")\n    }\n\n    render() {\n        console.log(\"render\")\n        return (\n            <div>\n                {!this.state.editMode &&\n                    <div>\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || \"-------\"}</span>\n                    </div>\n                }\n                {this.state.editMode &&\n                    <div>\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode.bind(this) } value={this.state.status}/>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          {/*  <div>\r\n                <img\r\n                    src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n            </div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} />\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport * as axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = 1049;\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth ? props.login\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\r\nimport {authAPI} from \"../../api/api\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n      this.props.getAuthUserData();\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {getAuthUserData})(HeaderContainer);","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\n\nconst LoginForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={\"Login\"} name={\"login\"}\n                       validate={[required]}\n                       component={Input}/>\n            </div>\n            <div>\n                <Field placeholder={\"Password\"} name={\"password\"}\n                       validate={[required]}\n                       component={Input}/>\n            </div>\n            <div>\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\n            </div>\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm =  reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        console.log(formData);\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} />\n    </div>\n}\n\nexport default Login;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\n\nconst App = () => {\n    return (\n            <div className='app-wrapper'>\n                <HeaderContainer />\n                <Navbar />\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                           render={ () => <DialogsContainer /> }/>\n\n                    <Route path='/profile/:userId?'\n                           render={ () => <ProfileContainer /> }/>\n\n                    <Route path='/users'\n                           render={ () => <UsersContainer /> }/>\n\n                    <Route path='/login'\n                           render={ () => <LoginPage /> }/>\n\n\n                </div>\n            </div>\n        )\n}\n\nexport default App;","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3-uCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__31uah\",\"error\":\"FormsControls_error__2lk6N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1v_8M\",\"selectedPage\":\"users_selectedPage__2aapC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2XQYl\",\"posts\":\"MyPosts_posts__1t4xr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Dh8B\",\"loginBlock\":\"Header_loginBlock__1af8f\"};"],"sourceRoot":""}